name: CI

on: [push, pull_request]

jobs:
  lint:
    name: lint and style checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-docstrings flake8-debugger flake8-bugbear pytest
      - name: Install Pycoast
        run: |
          pip install -e .
      - name: Run linting
        run: |
          flake8 pycoast/

  website:
    name: build website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

#      - name: Set up Python 3.9
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.9
      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          python-version: 3.9
          use-mamba: true
          environment-file: continuous_integration/environment.yaml
          activate-environment: test-environment

      - name: Install Pycoast
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -e .

      - name: Run Sphinx Build
        shell: bash -l {0}
        run: |
          cd docs; \
          make html SPHINXOPTS="-W"

  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    needs: [lint]
    strategy:
      fail-fast: true
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
        python-version: ["3.7", "3.9"]
        experimental: [false]
        include:
          - python-version: "3.9"
            os: "ubuntu-latest"
            experimental: true

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      UNSTABLE: ${{ matrix.experimental }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
          use-mamba: true
          environment-file: continuous_integration/environment.yaml

      - name: Install unstable dependencies
        shell: bash -l {0}
        if: matrix.experimental == true
        run: |
          python -m pip install \
          --index-url https://pypi.anaconda.org/scipy-wheels-nightly/simple/ \
          --trusted-host pypi.anaconda.org \
          --no-deps --pre --upgrade \
          numpy;

      - name: Install pycoast
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -e .

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pytest --cov=pycoast pycoast/tests

      - name: Coveralls Parallel
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-${{ matrix.test_number }}
          parallel: true
        if: runner.os == 'Linux'

  coveralls:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true

